package org.capnproto;

import com.squareup.javapoet.JavaFile;
import com.squareup.javapoet.TypeSpec;

import javax.lang.model.element.Modifier;

public class Generator {
    private static final long PACKAGE_ANNOTATION_ID = 0x9ee4c8f803b3b596L;
    private static final long OUTER_CLASSNAME_ANNOTATION_ID = 0x9b066bb4881f7cd3L;

    public static JavaFile makeJavaFile(final Schema.Node.Reader node) {
        final String displayName = node.getDisplayName().toString();

        String packageName = "";
        String outerClassname = "";
        for (final Schema.Annotation.Reader annotation : node.getAnnotations()) {
            if (annotation.getId() == PACKAGE_ANNOTATION_ID) {
                packageName = annotation.getValue().getText().toString();
            } else if (annotation.getId() == OUTER_CLASSNAME_ANNOTATION_ID) {
                outerClassname = annotation.getValue().getText().toString();
            }
        }

        if (packageName.isEmpty()) {
            throw new IllegalArgumentException(String.format("%s: no Java package name found. See java.capnp.", displayName));
        }
        if (outerClassname.isEmpty()) {
            throw new IllegalArgumentException(String.format("%s: no Java outer classname found. See java.capnp.", displayName));
        }

        final TypeSpec schemas = TypeSpec.classBuilder("Schemas")
                .addModifiers(Modifier.PUBLIC, Modifier.STATIC, Modifier.FINAL)
                .build();
        final TypeSpec outerClass = TypeSpec.classBuilder(outerClassname)
                .addModifiers(Modifier.PUBLIC, Modifier.FINAL)
                .addType(schemas)
                .build();
        return JavaFile.builder(packageName, outerClass)
                .addFileComment("Generated by Cap'n Proto compiler, DO NOT EDIT\n")
                .addFileComment("source: $L\n", Utils.baseName(displayName))
                .build();
    }
}
