package org.capnproto;

import com.squareup.javapoet.JavaFile;
import com.squareup.javapoet.TypeSpec;
import org.capnproto.utils.StrUtil;

import javax.lang.model.element.Modifier;
import java.util.Optional;

public class Generator {
    public static JavaFile makeJavaFile(final GeneratorContext ctx, final long nodeId) {
        final Schema.Node.Reader node = ctx.nodeMap.get(nodeId);
        final String displayName = node.getDisplayName().toString();

        final Optional<String> packageName = ctx.nodePackageName(nodeId);
        final Optional<String> outerClassname = ctx.nodeOuterClassname(nodeId);

        if (packageName.isEmpty()) {
            throw new IllegalArgumentException(String.format("%s: no Java package name found. See java.capnp.", displayName));
        }
        if (outerClassname.isEmpty()) {
            throw new IllegalArgumentException(String.format("%s: no Java outer classname found. See java.capnp.", displayName));
        }

        final TypeSpec schemas = TypeSpec.classBuilder("Schemas")
                .addModifiers(Modifier.PUBLIC, Modifier.STATIC, Modifier.FINAL)
                .build();
        final TypeSpec outerClass = TypeSpec.classBuilder(outerClassname.get())
                .addModifiers(Modifier.PUBLIC, Modifier.FINAL)
                .addType(schemas)
                .build();
        return JavaFile.builder(packageName.get(), outerClass)
                .addFileComment("Generated by Cap'n Proto compiler, DO NOT EDIT\n")
                .addFileComment("source: $L\n", StrUtil.baseName(displayName))
                .build();
    }
}
